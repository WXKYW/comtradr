% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ct_perform_request.R
\name{ct_perform_request}
\alias{ct_perform_request}
\title{Performs the request to the Comtrade API}
\usage{
ct_perform_request(req, requests_per_second, verbose = FALSE)
}
\arguments{
\item{req}{a valid comtrade request built by the \code{ct_build_request()} function}

\item{requests_per_second}{Rate of requests per second executed,
usually specified as a fraction, e.g. 10/60 for 10 requests per minute,
see \code{req_throttle()} for details.}

\item{verbose}{If TRUE, sends status updates to the console.
If FALSE, runs functions quietly. Default: FALSE.}
}
\value{
JSON data from comtrade, data.frame with results or error codes.
}
\description{
This function is internally called by \code{ct_get_data()} and performs the request constructed by \code{ct_build_request()} and returns an error body with the respective error returned by the Comtrade API.
By default throttles all requests to 1 request per 6 seconds, or 10 requests per minute, but it adjusts automatically if the
API asks for longer waiting times.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
ct_get_data(
  commodity_code = NULL,
  reporter = "CHN",
  partner = "DEU",
  start_date = "2019",
  end_date = "2019",
  flow_direction = "import"
)
req <- httr2::last_request()
resp <- comtradr:::ct_perform_request(req, requests_per_second = 10 / 60, verbose = FALSE)
\dontshow{\}) # examplesIf}
}
